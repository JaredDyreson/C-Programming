#!/usr/bin/env zsh

function succ_(){
  echo "[+] BUILD SUCCEEDED!"
  echo "[+] Number of non blank lines: $(cat ed_manip.c | sed '/^\s*#/d;/^\s*$/d' | wc -l)"
}

function err_(){
  echo "[-] BUILD FAILED"
  cat warning_error_logs.txt | less
  exit
}

function testing_with_files_(){

  build_input="ed_manip.c"
  build_input_name="$build_input:t:r"

  echo "[+] Building "$build_input" from source...."

  clang -lm -g "$build_input" -o "$build_input_name" 2> warning_error_logs.txt && succ_ || err_

  cp "$target" ""$name"_cloned"
  target=""$name"_cloned"

  echo "[+] Contents of $target: "
  cat "$target"
  echo -e ",s/this/replaced/g\n,s/^yes/line/g\nw\nq" | ./"$build_input_name" "$target"

  echo "[+] Contents of $target after replacement (this --> replaced | ^yes --> line): "
  cat "$target"

  echo -e ",s/^line/LINE/g\nw\nq" | ./"$build_input_name" "$target"
  echo "[+] Contents of $target after beginning line replacement (^line --> LINE):"
  cat "$target"

  echo -e ",s/l.*e/out/g\nw\nq" | ./"$build_input_name" "$target"
  echo "[+] Contents of $target after star line replacement (l.*e --> weirdness):"
  cat "$target"
  
  echo -e ",s/(?<=L)(.*?)(?=E)/OUT/g\nw\nq" | ./"$build_input_name" "$target"
  echo "[+] Contents of $target after look inside replacement (/L/,/E/ --> LOUTE):"
  cat "$target"

  rm "$target"
}

function testing_with_arguments_(){
  clang -lm -g "ed_manip.c" -o "ed_manip" 2> warning_error_logs.txt && succ_ || err_
  ./ed_manip -i "^EXPRESSION" ./input.txt
}

[[ -z "$@" ]] && exit
target="$1"
name="$1:t:r"
testing_with_files_ ./input.txt
